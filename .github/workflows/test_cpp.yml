name: Test CPP builds

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  MSVC: 
    runs-on: windows-latest
    name: MSVC Build Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install build requirements
        run: pipx install meson

      - name: Configure Build
        run: meson setup builddir -Dvsenv=True
        env:
          CXX: cl
          CC: cl

      - name: List Build Targets
        run: |
            meson compile -C builddir -v subprojects/highway/hwy_list_targets
            builddir/subprojects/highway/hwy_list_targets

      - name: Build
        run: meson compile -C builddir -v

      - name: Test
        run: meson test -C builddir --print-errorlogs

  Intel_Win: 
    runs-on: windows-latest
    name: Intel compiler on Windows
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: intel
          python-version: 3.13

      - name: Install build requirements
        run: conda install --yes -c conda-forge meson ninja dpcpp_win-64=2025.1 pkg-config

      - name: Prepend to LIB and LIBRARY_PATH
        run: |
          "LIB=$env:CONDA_PREFIX\Library\lib;$env:LIB" >> $env:GITHUB_ENV
          "LIBRARY_PATH=$env:CONDA_PREFIX\Library\lib;$env:LIBRARY_PATH" >> $env:GITHUB_ENV

        # Appending conda's library path to the LIB and LIBRARY_PATH environment variables...
      - name: Configure Build
        run: |
            echo $env:LIB
            echo $env:LIBRARY_PATH
            meson setup builddir -Dvsenv=True
        env:
          CXX: icx-cl
          CC: icx-cl

      - name: List Build Targets
        run: |
            meson compile -C builddir -v subprojects/highway/hwy_list_targets
            builddir/subprojects/highway/hwy_list_targets

      - name: Build
        run: |
            meson compile -C builddir -v

      - name: Test
        run: meson test -C builddir --print-errorlogs

  CLANG_Win:
    runs-on: windows-latest
    name: LLVM on Windows
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install build requirements
        run: pipx install meson

      - name: Configure Build
        run: meson setup builddir -Dvsenv=True
        env:
          CXX: clang-cl
          CC: clang-cl

      - name: List Build Targets
        run: |
            meson compile -C builddir -v subprojects/highway/hwy_list_targets
            builddir/subprojects/highway/hwy_list_targets

      - name: Build
        run: meson compile -C builddir -v

      - name: Test
        run: meson test -C builddir --print-errorlogs

  ubuntu:
    name: Testing ${{ matrix.compiler }} on Ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    continue-on-error: true
    strategy:
      matrix:
        include:
          - compiler: GNU
            cxx_compiler: g++-14
            c_compiler: gcc-14
            extra_deps: g++-14
          
          - compiler: LLVM
            cxx_compiler: clang++-18
            c_compiler: clang-18
            extra_deps: clang-18

          - compiler: INTEL
            cxx_compiler: icpx
            c_compiler: icx
      
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: conda-incubator/setup-miniconda@v3
        if: matrix.compiler == 'INTEL'
        with:
          activate-environment: intel
          python-version: 3.13
          channels: conda-forge

      - name: Install ${{ matrix.compiler }} compiler
        run: |
          if [ "${{ matrix.compiler }}" = "INTEL" ]; then
            conda install --yes -c conda-forge dpcpp_linux-64=2025.1
          else
            sudo apt install ${{ matrix.extra_deps }}
          fi

      - name: Install build requirements
        run: pipx install meson

      - name: Configure Build
        run: meson setup builddir
        env:
          CXX: ${{ matrix.cxx_compiler }}
          CC: ${{ matrix.c_compiler }}

      - name: List Build Targets
        run: |
            meson compile -C builddir -v subprojects/highway/hwy_list_targets
            builddir/subprojects/highway/hwy_list_targets

      - name: Build
        run: meson compile -C builddir -v

      - name: Test
        run: meson test -C builddir --print-errorlogs

  mac_os:
    name: Testing ${{ matrix.compiler }} on MacOS
    continue-on-error: true
    strategy:
      matrix:
        include:
          - compiler: GNU
            cxx_compiler: g++-14
            c_compiler: gcc-14
            extra_deps: gcc@15
          
          - compiler: LLVM
            cxx_compiler: /opt/homebrew/opt/llvm/bin/clang++
            c_compiler: /opt/homebrew/opt/llvm/bin/clang
            extra_deps: llvm@20 lld@20

          - compiler: Apple
            cxx_compiler: clang++
            c_compiler: clang

    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install ${{ matrix.compiler }} compiler
        if: matrix.compiler != 'APPLE'
        run: brew install ${{ matrix.extra_deps }}

      - name: Install build requirements
        run: pipx install meson

      - name: Configure Build
        run: meson setup builddir
        env:
          CXX: ${{ matrix.cxx_compiler }}
          CC: ${{ matrix.c_compiler }}

      - name: List Build Targets
        run: |
            meson compile -C builddir -v subprojects/highway/hwy_list_targets
            builddir/subprojects/highway/hwy_list_targets

      - name: Build
        run: meson compile -C builddir -v

      - name: Test
        run: meson test -C builddir --print-errorlogs
