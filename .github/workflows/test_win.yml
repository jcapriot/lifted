name: Test

on:
  pull_request:
  push:
    branches:
      - main

jobs: 
  MSVC: 
    runs-on: windows-latest
    name: MSVC Build Test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'

      - name: Install build requirements
        run: python -m pip install meson ninja

      - name: Configure Build
        run: meson setup builddir -Dbuild_tests=True -Dvsenv=True

      - name: Build
        run: meson compile -C builddir

      - name: Test
        run: meson test -C builddir -vv

  # Intel_Win: 
  #   runs-on: windows-latest
  #   name: Intel-Win
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         persist-credentials: false

  #     - name: Cache Intel oneAPI BaseKit Installer
  #       id: cache-oneapi
  #       uses: actions/cache@v4
  #       with:
  #         path: basekit.exe
  #         key: oneapi-basekit-2025.1.3

  #     - name: Download Installer if Not Cached
  #       if: steps.cache-oneapi.outputs.cache-hit != 'true'
  #       run: |
  #         Invoke-WebRequest -Uri https://registrationcenter-download.intel.com/akdlm/IRC_NAS/e5785fb3-b5a7-4b97-89bc-918adab1f77d/intel-oneapi-base-toolkit-2025.1.3.8_offline.exe -OutFile basekit.exe

  #     - name: Install Intel oneAPI BaseKit
  #       run: .\basekit.exe -s -a --silent --eula accept -p=NEED_VS2019_INTEGRATION=0
  #       shell: cmd

  #     - name: Setup python
  #       uses: actions/setup-python@v5
  #       with:
  #           python-version: '3.13'

  #     - name: Install build requirements
  #       run: python -m pip install meson ninja

  #     - name: Check Installed directories
  #       run: ls 'C:\Program Files (x86)'
            

  #     - name: Configure Build
  #       run: |
  #           call "C:\Program Files (x86)\Intel\oneAPI\setvars-vcvarsall.bat"
  #           meson setup builddir -Dbuild_tests=True -Dvsenv=True
  #       shell: cmd
  #       env:
  #         CXX: icx

  #     - name: Build
  #       run: meson compile -C builddir

  #     - name: Test
  #       run: meson test -C builddir -vv

  GNU_UBUNTU:
    name: G++ on ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install GNU compiler
        run: sudo apt install g++-14

      - name: Setup python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'

      - name: Install build requirements
        run: python -m pip install meson ninja

      - name: Configure Build
        run: meson setup builddir -Dbuild_tests=True
        env:
          CXX: g++-14

      - name: Build
        run: meson compile -C builddir

      - name: Test
        run: meson test -C builddir -vv

  LLVM_UBUNTU:
    name: LLVM on ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install GNU compiler
        run: sudo apt install clang-18

      - name: Setup python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'

      - name: Install build requirements
        run: python -m pip install meson ninja

      - name: Configure Build
        run: meson setup builddir -Dbuild_tests=True
        env:
          CXX: clang++-18

      - name: Build
        run: meson compile -C builddir

      - name: Test
        run: meson test -C builddir -vv

  GNU_MAC:
    name: G++ on MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install GNU compiler
        run: brew install gcc@15

      - name: Setup python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'

      - name: Install build requirements
        run: python -m pip install meson ninja

      - name: Configure Build
        run: meson setup builddir -Dbuild_tests=True
        env:
          CXX: g++-15

      - name: Build
        run: meson compile -C builddir

      - name: Test
        run: meson test -C builddir -vv

  LLVM_MAC:
    name: LLVM on MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install LLVM compiler
        run: brew install llvm@20 lld@20

      - name: Setup python
        uses: actions/setup-python@v5
        with:
            python-version: '3.13'

      - name: Install build requirements
        run: python -m pip install meson ninja

      - name: Configure Build
        run: meson setup builddir -Dbuild_tests=True
        env:
          CXX: /opt/homebrew/opt/llvm/bin/clang++

      - name: Build
        run: meson compile -C builddir

      - name: Test
        run: meson test -C builddir -vv


           
        